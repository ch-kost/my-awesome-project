// theme.js ‚Äî –Ω–∞–¥—ë–∂–Ω—ã–π, —Å –ª–æ–≥–∞–º–∏ –∏ –∞–≤—Ç–æ-–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º –∫–Ω–æ–ø–∫–∏, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
document.addEventListener('DOMContentLoaded', () => {
  const STORAGE_KEY = 'site-theme'; // 'dark' –∏–ª–∏ 'light'
  const body = document.body;

  console.log('[theme] script loaded');

  // –ù–∞–π–¥—ë–º –∫–Ω–æ–ø–∫—É –ø–æ id –∏–ª–∏ –ø–æ –∫–ª–∞—Å—Å—É. –ï—Å–ª–∏ –Ω–µ—Ç ‚Äî —Å–æ–∑–¥–∞–¥–∏–º –∏ –≤—Å—Ç–∞–≤–∏–º –≤ themeContainer.
  let btn = document.getElementById('themeToggle') || document.querySelector('.theme-toggle');
  let icon = null;

  if (!btn) {
    const container = document.getElementById('themeContainer');
    if (container) {
      btn = document.createElement('button');
      btn.id = 'themeToggle';
      btn.className = 'theme-toggle';
      btn.type = 'button';
      btn.setAttribute('aria-pressed', 'false');
      btn.setAttribute('title', '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å —Ç–µ–º—É');
      btn.innerHTML = '<span id="themeIcon">‚òÄÔ∏è</span>';
      container.appendChild(btn);
      console.log('[theme] created theme button inside #themeContainer');
    } else {
      console.warn('[theme] no theme button and no #themeContainer ‚Äî theme toggle will not be visible');
    }
  }

  icon = document.getElementById('themeIcon') || (btn && btn.querySelector('#themeIcon'));

  // –±–µ–∑–æ–ø–∞—Å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ localStorage (–≤ try/catch –¥–ª—è –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞)
  function safeSet(key, value) {
    try { localStorage.setItem(key, value); } catch (e) { console.warn('[theme] cannot access localStorage', e); }
  }
  function safeGet(key) {
    try { return localStorage.getItem(key); } catch (e) { return null; }
  }

  function applyTheme(mode, save = false) {
    if (mode === 'dark') {
      body.classList.add('dark');
      if (btn) btn.setAttribute('aria-pressed', 'true');
      if (icon) icon.textContent = 'üåô';
    } else {
      body.classList.remove('dark');
      if (btn) btn.setAttribute('aria-pressed', 'false');
      if (icon) icon.textContent = '‚òÄÔ∏è';
    }
    if (save) safeSet(STORAGE_KEY, mode);
    console.log('[theme] applied theme:', mode);
  }

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: localStorage -> system preference -> light
  const saved = safeGet(STORAGE_KEY);
  if (saved === 'dark' || saved === 'light') {
    applyTheme(saved, false);
  } else if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {
    applyTheme('dark', false);
  } else {
    applyTheme('light', false);
  }

  // –µ—Å–ª–∏ system preference –∏–∑–º–µ–Ω–∏–ª—Å—è –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Ö—Ä–∞–Ω—è–ª —è–≤–Ω—ã–π –≤—ã–±–æ—Ä, –º–µ–Ω—è–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
  if (window.matchMedia) {
    const mql = window.matchMedia('(prefers-color-scheme: dark)');
    mql.addEventListener?.('change', (e) => {
      if (!safeGet(STORAGE_KEY)) {
        applyTheme(e.matches ? 'dark' : 'light', false);
      }
    });
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ ‚Äî —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –±—ã–ª–∞ —Å–æ–∑–¥–∞–Ω–∞ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
  if (btn) {
    btn.addEventListener('click', () => {
      const isDark = body.classList.contains('dark');
      applyTheme(isDark ? 'light' : 'dark', true); // —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—ã–±–æ—Ä
    });
  } else {
    console.warn('[theme] button not found, cannot attach click handler');
  }

  // –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –≤ –∫–æ–Ω—Å–æ–ª–∏: window.siteTheme.set('dark'|'light')
  window.siteTheme = {
    set: (mode) => applyTheme(mode, true),
    clear: () => { try { localStorage.removeItem(STORAGE_KEY); console.log('[theme] cleared saved theme'); } catch(e){} }
  };
});
